import React, { useEffect, useState } from "react";
import api from "../../utils/api";
import styles from "./productPage.module.scss";
import Gallery from "../gallery/Gallery.jsx";
import { Link } from "react-router-dom";
import { useParams } from "react-router-dom";
import { useDispatch } from "react-redux";
import { addToCart } from "../../store/cartSlice.js";
import ContactWhatsApp from "../contactWhatsApp/ContactWhatsApp.jsx";
import { useNavigate } from "react-router-dom";
import MainServiceBenefits from "../mainServiceBenefits/MainServiceBenefits.jsx";
import SomeInfo from "../someInfo/SomeInfo.jsx";

const ProductPage = () => {
  const navigate = useNavigate();
  const { id } = useParams();
  const [product, setProduct] = useState();
  const [selectedSize, setSelectedSize] = useState("S");
  const sizeOptions = {
    S: { label: "S (—Å—Ç–∞–Ω–¥–∞—Ä—Ç)", multiplier: 1 },
    M: { label: "M (+30% —Ü–≤–µ—Ç–æ–≤)", multiplier: 1.3 },
    L: { label: "L (+50% —Ü–≤–µ—Ç–æ–≤)", multiplier: 1.5 },
    XL: { label: "XL (+100% —Ü–≤–µ—Ç–æ–≤)", multiplier: 2 },
  };
  const [isOpen, setIsOpen] = useState(true);
  const dispatch = useDispatch();
  const basePrice = parseFloat(product?.saleprice || product?.price || 0);
  const finalPrice = Math.round(
    basePrice * sizeOptions[selectedSize].multiplier
  );
  const normalPrice = parseFloat(product?.price || 0);
  const finalnormalPrice = Math.round(
    normalPrice * sizeOptions[selectedSize].multiplier
  );
  useEffect(() => {
    const getProduct = async () => {
      try {
        const response = await api.get(`main/getProduct/${id}`);
        setProduct(response.data.bouquet);
      } catch (error) {}
    };
    getProduct();
  }, [id]);
  if (!product) {
    return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
  }
  return (
    <div className={styles.productPage}>
      <div className={styles.productPage_mainDiv}>
        <div className={styles.header}>
          <Link to="/allCategories">–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É</Link>
          <div className={styles.header_text}>
            <div>–î–µ—Ç–∞–ª–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –≤—ã –º–æ–∂–µ—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å —Å –Ω–∞—à–∏–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º</div>
            <div>–í—Å–µ —Å–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏ —É–∫–∞–∑–∞–Ω—ã –≤–æ –≤–∫–ª–∞–¥–∫–µ "–ö–æ–Ω—Ç–∞–∫—Ç—ã"</div>
          </div>
        </div>
        <div className={styles.hr}>
          <hr />
        </div>
        <div className={styles.body}>
          <Gallery images={product.imageUrl} />
          <div className={styles.body_information}>
            <div className={styles.title_bouquet}>
              <h3>{product.name}</h3>
              <div>
                üì¶ –î–æ—Å—Ç–∞–≤–∏–º: <span>–≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞</span>
              </div>
            </div>
            <div className={styles.sizeSelector}>
              {Object.entries(sizeOptions).map(([key, option]) => (
                <button
                  key={key}
                  className={`${styles.sizeButton} ${
                    selectedSize === key ? styles.selected : ""
                  }`}
                  onClick={() => setSelectedSize(key)}
                >
                  {option.label}
                </button>
              ))}
            </div>
            <div className={styles.price}>
              <div className={styles.priceTitle}>–¶–µ–Ω–∞: </div>
              {product.saleprice ? (
                <div className={styles.saleStyles}>
                  <div className={styles.oldPrice}> {finalnormalPrice} ‚Ç∏</div>
                  <div className={styles.salePrice}>{finalPrice} ‚Ç∏</div>
                </div>
              ) : (
                <div className={styles.salePrice}> {finalnormalPrice} ‚Ç∏</div>
              )}
            </div>
            <hr />
            <div className={styles.description}>
              <div className={styles.description_head}>–û–ø–∏—Å–∞–Ω–∏–µ:</div>
              <div className={styles.description_body}>
                {product.description}
              </div>
            </div>
            <div className={styles.buttons}>
              <button
                onClick={() =>
                  dispatch(
                    addToCart({
                      id: product.id,
                      price: product.saleprice ? finalPrice : finalnormalPrice,
                      size: selectedSize,
                    })
                  )
                }
              >
                –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
              </button>
              <button
                onClick={() => {
                  dispatch(
                    addToCart({
                      id: product.id,
                      price: product.saleprice ? finalPrice : finalnormalPrice,
                      size: selectedSize,
                    })
                  );
                  navigate("/basket");
                }}
              >
                –ö—É–ø–∏—Ç—å –≤ –æ–¥–∏–Ω –∫–ª–∏–∫
              </button>
            </div>
          </div>
        </div>
        {/* Payment */}
        <div className={styles.payment}>
          <div className={styles.tab}>–û–ø–ª–∞—Ç–∞</div>
          <div className={styles.tab_info}>
            <div className={styles.head}>
              <div className={styles.head_text}>
                –ö–∞–∫ –º–æ–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ–∫—É–ø–∫—É?
              </div>
              <button onClick={() => setIsOpen((prev) => !prev)}>
                {isOpen ? "‚àí" : "+"}
              </button>
            </div>

            {isOpen && (
              <div className={styles.body}>
                <p className={styles.subheading}>–ù–∞–ª–∏—á–Ω—ã–º–∏:</p>
                <p className={styles.paragraph}>
                  –í –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ –ø–æ –∞–¥—Ä–µ—Å—É: –≥. –ê–ª–º–∞—Ç—ã, —É–ª. –†–∞–¥–ª–æ–≤–∞, 50 –∫—É—Ä—å–µ—Ä—É
                  –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±—É–∫–µ—Ç–∞
                </p>
                <p className={styles.subheading}>–û–Ω–ª–∞–π–Ω:</p>
                <p className={styles.paragraph}>–ü–µ—Ä–µ–≤–æ–¥–æ–º –Ω–∞ –∫–∞—Å–ø–∏ —Å—á–µ—Ç</p>
                <p className={styles.paragraph}>
                  (–†–µ–∫–≤–∏–∑–∏—Ç—ã —É—Ç–æ—á–Ω—è–π—Ç–µ —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞)
                </p>
              </div>
            )}
          </div>
        </div>

        {/* –ö–æ–Ω—Ç–∞–∫—Ç */}
        <ContactWhatsApp> </ContactWhatsApp>
      </div>

      <SomeInfo></SomeInfo>

      <MainServiceBenefits></MainServiceBenefits>
    </div>
  );
};

export default ProductPage;
